// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packet.proto

package pty

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bytes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Completed            bool     `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bytes) Reset()         { *m = Bytes{} }
func (m *Bytes) String() string { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()    {}
func (*Bytes) Descriptor() ([]byte, []int) {
	return fileDescriptor_packet_e772e5c429200560, []int{0}
}
func (m *Bytes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bytes.Unmarshal(m, b)
}
func (m *Bytes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bytes.Marshal(b, m, deterministic)
}
func (dst *Bytes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bytes.Merge(dst, src)
}
func (m *Bytes) XXX_Size() int {
	return xxx_messageInfo_Bytes.Size(m)
}
func (m *Bytes) XXX_DiscardUnknown() {
	xxx_messageInfo_Bytes.DiscardUnknown(m)
}

var xxx_messageInfo_Bytes proto.InternalMessageInfo

func (m *Bytes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Bytes) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

type Size struct {
	Cols                 uint32   `protobuf:"varint,1,opt,name=cols,proto3" json:"cols,omitempty"`
	Rows                 uint32   `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Size) Reset()         { *m = Size{} }
func (m *Size) String() string { return proto.CompactTextString(m) }
func (*Size) ProtoMessage()    {}
func (*Size) Descriptor() ([]byte, []int) {
	return fileDescriptor_packet_e772e5c429200560, []int{1}
}
func (m *Size) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Size.Unmarshal(m, b)
}
func (m *Size) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Size.Marshal(b, m, deterministic)
}
func (dst *Size) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Size.Merge(dst, src)
}
func (m *Size) XXX_Size() int {
	return xxx_messageInfo_Size.Size(m)
}
func (m *Size) XXX_DiscardUnknown() {
	xxx_messageInfo_Size.DiscardUnknown(m)
}

var xxx_messageInfo_Size proto.InternalMessageInfo

func (m *Size) GetCols() uint32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *Size) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func init() {
	proto.RegisterType((*Bytes)(nil), "pty.Bytes")
	proto.RegisterType((*Size)(nil), "pty.Size")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TerminalClient is the client API for Terminal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerminalClient interface {
	Attach(ctx context.Context, opts ...grpc.CallOption) (Terminal_AttachClient, error)
	Resize(ctx context.Context, in *Size, opts ...grpc.CallOption) (*Size, error)
}

type terminalClient struct {
	cc *grpc.ClientConn
}

func NewTerminalClient(cc *grpc.ClientConn) TerminalClient {
	return &terminalClient{cc}
}

func (c *terminalClient) Attach(ctx context.Context, opts ...grpc.CallOption) (Terminal_AttachClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Terminal_serviceDesc.Streams[0], "/pty.Terminal/Attach", opts...)
	if err != nil {
		return nil, err
	}
	x := &terminalAttachClient{stream}
	return x, nil
}

type Terminal_AttachClient interface {
	Send(*Bytes) error
	Recv() (*Bytes, error)
	grpc.ClientStream
}

type terminalAttachClient struct {
	grpc.ClientStream
}

func (x *terminalAttachClient) Send(m *Bytes) error {
	return x.ClientStream.SendMsg(m)
}

func (x *terminalAttachClient) Recv() (*Bytes, error) {
	m := new(Bytes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *terminalClient) Resize(ctx context.Context, in *Size, opts ...grpc.CallOption) (*Size, error) {
	out := new(Size)
	err := c.cc.Invoke(ctx, "/pty.Terminal/Resize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerminalServer is the server API for Terminal service.
type TerminalServer interface {
	Attach(Terminal_AttachServer) error
	Resize(context.Context, *Size) (*Size, error)
}

func RegisterTerminalServer(s *grpc.Server, srv TerminalServer) {
	s.RegisterService(&_Terminal_serviceDesc, srv)
}

func _Terminal_Attach_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TerminalServer).Attach(&terminalAttachServer{stream})
}

type Terminal_AttachServer interface {
	Send(*Bytes) error
	Recv() (*Bytes, error)
	grpc.ServerStream
}

type terminalAttachServer struct {
	grpc.ServerStream
}

func (x *terminalAttachServer) Send(m *Bytes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *terminalAttachServer) Recv() (*Bytes, error) {
	m := new(Bytes)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Terminal_Resize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Size)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalServer).Resize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pty.Terminal/Resize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalServer).Resize(ctx, req.(*Size))
	}
	return interceptor(ctx, in, info, handler)
}

var _Terminal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pty.Terminal",
	HandlerType: (*TerminalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resize",
			Handler:    _Terminal_Resize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Attach",
			Handler:       _Terminal_Attach_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "packet.proto",
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_packet_e772e5c429200560) }

var fileDescriptor_packet_e772e5c429200560 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x4c, 0xce,
	0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x28, 0xa9, 0x54, 0xb2, 0xe4,
	0x62, 0x75, 0xaa, 0x2c, 0x49, 0x2d, 0x16, 0x12, 0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x85, 0x64, 0xb8, 0x38, 0x93, 0xf3, 0x73, 0x0b, 0x72,
	0x52, 0x4b, 0x52, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x82, 0x10, 0x02, 0x4a, 0x7a, 0x5c,
	0x2c, 0xc1, 0x99, 0x55, 0xa9, 0x20, 0x9d, 0xc9, 0xf9, 0x39, 0xc5, 0x60, 0x9d, 0xbc, 0x41, 0x60,
	0x36, 0x48, 0xac, 0x28, 0xbf, 0xbc, 0x18, 0xac, 0x89, 0x37, 0x08, 0xcc, 0x36, 0x0a, 0xe0, 0xe2,
	0x08, 0x49, 0x2d, 0xca, 0xcd, 0xcc, 0x4b, 0xcc, 0x11, 0x52, 0xe1, 0x62, 0x73, 0x2c, 0x29, 0x49,
	0x4c, 0xce, 0x10, 0xe2, 0xd2, 0x2b, 0x28, 0xa9, 0xd4, 0x03, 0xbb, 0x41, 0x0a, 0x89, 0xad, 0xc1,
	0x68, 0xc0, 0x28, 0x24, 0xc7, 0xc5, 0x16, 0x94, 0x5a, 0x0c, 0xb2, 0x83, 0x13, 0x2c, 0x03, 0xb2,
	0x4e, 0x0a, 0xc1, 0x4c, 0x62, 0x03, 0x7b, 0xc4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x3a,
	0x21, 0x9c, 0xd8, 0x00, 0x00, 0x00,
}
